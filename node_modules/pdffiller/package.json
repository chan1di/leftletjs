{
  "_args": [
    [
      {
        "raw": "pdffiller",
        "scope": null,
        "escapedName": "pdffiller",
        "name": "pdffiller",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/var/www/html/chandresh/projects/METEOR-REACT/METEORJS/Meteor-Demo/Meteor-demo"
    ]
  ],
  "_from": "pdffiller@latest",
  "_id": "pdffiller@0.0.10",
  "_inCache": true,
  "_location": "/pdffiller",
  "_nodeVersion": "6.7.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/pdffiller-0.0.10.tgz_1486480611302_0.2315321492496878"
  },
  "_npmUser": {
    "name": "johntayl",
    "email": "johntayl89@gmail.com"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pdffiller",
    "scope": null,
    "escapedName": "pdffiller",
    "name": "pdffiller",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/pdffiller/-/pdffiller-0.0.10.tgz",
  "_shasum": "150c03d20be8350fd21ab903e4fb340426e270b5",
  "_shrinkwrap": null,
  "_spec": "pdffiller",
  "_where": "/var/www/html/chandresh/projects/METEOR-REACT/METEORJS/Meteor-Demo/Meteor-demo",
  "author": {
    "name": "John Taylor and David Baldwynn"
  },
  "dependencies": {
    "lodash": "~3.8.0",
    "utf8-fdf-generator": "0.0.3"
  },
  "description": "Take an existing PDF Form and data and PDF Filler will create a new PDF with all given fields populated.",
  "devDependencies": {
    "mocha": "~2.4.5",
    "should": "~6.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "150c03d20be8350fd21ab903e4fb340426e270b5",
    "tarball": "https://registry.npmjs.org/pdffiller/-/pdffiller-0.0.10.tgz"
  },
  "gitHead": "dc344fd81d90d0434dcc253d9ee14e4328b680dd",
  "keywords": [
    "nodejs",
    "pdftk",
    "fdf",
    "pdffiller",
    "pdf"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "johntayl",
      "email": "johntayl89@gmail.com"
    },
    {
      "name": "soitgoes",
      "email": "martin.murphy@whiteboard-it.com"
    },
    {
      "name": "whitef0x0",
      "email": "polydaic@gmail.com"
    }
  ],
  "name": "pdffiller",
  "optionalDependencies": {},
  "private": false,
  "readme": "PDF Filler (Node.js)\n======\n\nA node.js PDF form field data filler and FDF generator toolkit. This essentially is a wrapper around the PDF Toolkit library <a target=\"_blank\" href=\"http://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/\">PDF ToolKit</a>.\n\nPDF Filler requires the PDF ToolKit which can be found here: <a target=\"_blank\" href=\"http://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/\">PDF ToolKit</a>\n\n\n##Examples\n\n#### 1.Fill PDF with existing FDF Data\n````javascript\nvar pdfFiller   = require( 'pdffiller' );\n\nvar sourcePDF = \"test/test.pdf\";\nvar destinationPDF =  \"test/test_complete.pdf\";\n\nvar data = {\n    \"last_name\" : \"John\",\n    \"first_name\" : \"Doe\",\n    \"date\" : \"Jan 1, 2013\",\n    \"football\" : \"Off\",\n    \"baseball\" : \"Yes\",\n    \"basketball\" : \"Off\",\n    \"hockey\" : \"Yes\",\n    \"nascar\" : \"Off\"\n};\n\npdfFiller.fillForm( sourcePDF, destinationPDF, data, function(err) { \n    if (err) throw err;\n    console.log(\"In callback (we're done).\"); \n});\n\n````\n\nThis will take the test.pdf, fill the fields with the data values\nand create a complete filled in PDF (test_filled_in.pdf)\n\n\n#### 2. Generate FDF Template from PDF\n````javascript\nvar pdfFiller   = require( 'pdffiller' );\n\nvar sourcePDF = \"test/test.pdf\";\n\nvar FDF_data = pdfFiller.generateFDFTemplate( sourcePDF, function(err, fdfData) { \n    if (err) throw err;\n    console.log(fdfData);\n});\n\n````\n\nThis will print out this \n```{\n    \"last_name\" : \"\",\n    \"first_name\" : \"\",\n    \"date\" : \"\",\n    \"football\" : \"\",\n    \"baseball\" : \"\",\n    \"basketball\" : \"\",\n    \"hockey\" : \"\",\n    \"nascar\" : \"\"\n};```\n\n#### 3. Generate FDF Template from PDF\n````javascript\nvar pdfFiller   = require( 'pdffiller' );\n\nvar sourcePDF = \"test/test.pdf\";\n\nvar FDF_data = pdfFiller.generateFDFTemplate( sourcePDF, function(err, fdfData) { \n    if (err) throw err;\n    console.log(fdfData);\n});\n\n````\n\nThis will print out this \n```\n{\n    \"last_name\" : \"\",\n    \"first_name\" : \"\",\n    \"date\" : \"\",\n    \"football\" : \"\",\n    \"baseball\" : \"\",\n    \"basketball\" : \"\",\n    \"hockey\" : \"\",\n    \"nascar\" : \"\"\n};\n```\n\n#### 4. Map form fields to PDF fields\n````javascript\nvar pdfFiller = require( 'pdffiller' ),\n    sourcePDF = \"test/test.pdf\",\n    FDF_data,\n    destinationPDF =  \"test/test_complete.pdf\";\n\nvar conversionMap = {\n    \"lastName\": \"last_name\",\n    \"firstName\": \"first_name\",\n    \"Date\": \"date\",\n    \"lastName\": \"last_name\",\n    \"footballField\": \"football\",\n    \"bballField\": \"basketball\",\n    \"baseballField\": \"baseball\",\n    \"hockeyField\": \"hockey\",\n    \"nascarField\": \"nascar\"\n};\n\nvar FormFields = {\n    \"lastName\" : \"John\",\n    \"firstName\" : \"Doe\",\n    \"Date\" : \"Jan 1, 2013\",\n    \"footballField\" : \"Off\",\n    \"baseballField\" : \"Yes\",\n    \"bballField\" : \"Off\",\n    \"hockeyField\" : \"Yes\",\n    \"nascarField\" : \"Off\"\n};\n\npdfFiller.mapForm2PDF( data, convMap, function(err, mappedFields) { \n    if (err) throw err;\n\n    console.log(mappedFields);\n});\n````\n\nThis will print out the object below.\n```{\n    \"last_name\" : \"John\",\n    \"first_name\" : \"Doe\",\n    \"date\" : \"Jan 1, 2013\",\n    \"football\" : \"Off\",\n    \"baseball\" : \"Yes\",\n    \"basketball\" : \"Off\",\n    \"hockey\" : \"Yes\",\n    \"nascar\" : \"Off\"\n};```\n\n#### 5. Convert fieldJson to FDF data\n````javascript\nvar pdfFiller   = require( 'pdffiller' );\n\nvar sourcePDF = \"test/test.pdf\";\nvar fieldJson = [\n    {\n        \"title\" : \"last_name\",\n        \"fieldfieldType\": \"Text\",\n        \"fieldValue\": \"Doe\"\n    },\n    {\n        \"title\" : \"first_name\",\n        \"fieldfieldType\": \"Text\",\n        \"fieldValue\": \"John\"\n    },\n    {\n        \"title\" : \"date\",\n        \"fieldType\": \"Text\",\n        \"fieldValue\": \"Jan 1, 2013\"\n    },\n    {\n        \"title\" : \"football\",\n        \"fieldType\": \"Button\",\n        \"fieldValue\": false\n    },\n    {\n        \"title\" : \"baseball\",\n        \"fieldType\": \"Button\",\n        \"fieldValue\": true\n    },\n    {\n        \"title\" : \"basketball\",\n        \"fieldType\": \"Button\"\n        \"fieldValue\": false\n    },\n    {\n        \"title\" : \"hockey\",\n        \"fieldType\": \"Button\"\n        \"fieldValue\": true\n    },\n    {\n        \"title\" : \"nascar\",\n        \"fieldType\": \"Button\"\n        \"fieldValue\": false\n    }\n];\n\nvar FDFData = pdfFiller.convFieldJson2FDF( data );\nconsole.log(FDFData)\n````\n\nThis will print out this \n````\n{\n    \"last_name\" : \"John\",\n    \"first_name\" : \"Doe\",\n    \"date\" : \"Jan 1, 2013\",\n    \"football\" : \"Off\",\n    \"baseball\" : \"Yes\",\n    \"basketball\" : \"Off\",\n    \"hockey\" : \"Yes\",\n    \"nascar\" : \"Off\"\n};\n````\n",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "mocha test/test.js"
  },
  "version": "0.0.10"
}
